{"version":3,"file":"static/js/237.10b2f3b2.chunk.js","mappings":"yOAGaA,EAAQC,EAAAA,EAAAA,GAAH,+IAQLC,EAAQD,EAAAA,EAAAA,MAAH,0BAILE,EAAaF,EAAAA,EAAAA,KAAH,0BAIVG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,0BAILK,EAASL,EAAAA,EAAAA,OAAH,0B,gDC6CnB,MA7DA,WACE,IAAMM,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOXC,EAASC,EAAAA,GAAW,CACxBC,KAAMD,EAAAA,KAAaE,WAAWC,IAAI,GAAGC,IAAI,IACzCC,MAAOL,EAAAA,KAAaE,WAAWG,QAC/BC,SAAUN,EAAAA,KAAaE,WAAWC,IAAI,GAAGC,IAAI,MAG/C,OACE,iCACE,SAAChB,EAAD,4BAEA,SAAC,KAAD,CACEmB,cAAe,CAAEN,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDE,SAjBe,SAAC,GAA+B,IAA7BP,EAA4B,EAA5BA,KAAMI,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnCX,EAASc,EAAAA,EAAAA,aAAwB,CAAER,KAAAA,EAAMI,MAAAA,EAAOC,SAAAA,KAChDT,EAAS,cAgBLa,iBAAkBX,EAHpB,SAKG,gBAAGY,EAAH,EAAGA,aAAH,OACC,UAAC,KAAD,YACE,UAACrB,EAAD,YACE,SAACC,EAAD,+BACA,SAACC,EAAD,CACEoB,KAAK,OACLX,KAAK,UAGP,SAAC,KAAD,CAAcA,KAAK,OAAOY,UAAU,YAEtC,UAACvB,EAAD,YACE,SAACC,EAAD,iCACA,SAACC,EAAD,CACEoB,KAAK,QACLX,KAAK,WAEP,SAAC,KAAD,CAAcA,KAAK,QAAQY,UAAU,YAEvC,UAACvB,EAAD,YACE,SAACC,EAAD,iCACA,SAACC,EAAD,CACEoB,KAAK,WACLX,KAAK,cAEP,SAAC,KAAD,CAAcA,KAAK,WAAWY,UAAU,YAE1C,SAACnB,EAAD,CAAQkB,KAAK,SAAb,SACGD,EAAe,MAAQ,2BChDtC,MARA,WACE,OACE,SAACG,EAAA,EAAD,WACE,SAAC,EAAD","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Title = styled.h2`\nfont-size: 26px;\ntext-transform: uppercase;\nfont-weight: 900;\ncolor: var(--main-text-color);\nmargin-bottom: 30px;\n`;\n\nexport const Label = styled.label`\n\n`;\n\nexport const TitleInput = styled.span`\n\n`;\n\nexport const Input = styled(Field)`\n\n`;\n\nexport const Button = styled.button`\n\n`;","import { Formik, Form, ErrorMessage } from 'formik';\nimport { Title, Label, TitleInput, Input, Button } from './RegisterForm.styled';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport operations from 'redux/auth/auth-operations';\n\nfunction RegisterForm() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmitForm = ({ name, email, password }) => {\n    dispatch(operations.registerUser({ name, email, password }));\n    navigate('/contacts');\n  };\n\n  const schema = yup.object({\n    name: yup.string().required().min(3).max(30),\n    email: yup.string().required().email(),\n    password: yup.string().required().min(7).max(14),\n  });\n\n  return (\n    <>\n      <Title>Registration</Title>\n\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={onSubmitForm}\n        validationSchema={schema}\n      >\n        {({ isSubmitting }) => (\n          <Form >\n            <Label>\n              <TitleInput>Enter your name</TitleInput>\n              <Input\n                type=\"text\"\n                name=\"name\"\n             \n              />\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              <TitleInput>Enter your e-mail</TitleInput>\n              <Input\n                type=\"email\"\n                name=\"email\"\n              />\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </Label>\n            <Label>\n              <TitleInput>Create a password</TitleInput>\n              <Input\n                type=\"password\"\n                name=\"password\"\n              />\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\">\n              {isSubmitting ? '...' : 'Registration'}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default RegisterForm;\n","import Container from 'components/Container';\nimport RegisterForm from 'components/RegisterForm';\n\nfunction RegisterPage() {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  );\n}\n\nexport default RegisterPage;\n\n\n"],"names":["Title","styled","Label","TitleInput","Input","Field","Button","dispatch","useDispatch","navigate","useNavigate","schema","yup","name","required","min","max","email","password","initialValues","onSubmit","operations","validationSchema","isSubmitting","type","component","Container"],"sourceRoot":""}