{"version":3,"file":"static/js/734.b550feab.chunk.js","mappings":"sQACA,EAAuB,wBAAvB,EAA2D,6B,SCQ5C,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MAEF,IAAK,WACHL,EAAYK,GACZ,MAEF,QACE,SAcN,OACF,kBAAMC,SAXiB,SAAAJ,GAEnB,GADAA,EAAEK,iBACmB,KAAjBV,EAAMW,QAAqC,KAApBT,EAASS,OAClC,OAAOC,EAAAA,GAAAA,MAAY,8BAErBf,EAASgB,EAAAA,EAAAA,UAAqB,CAAEb,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,KAIcW,UAAWC,EAAYC,aAAa,MAAlE,WACM,SAACC,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,WACRC,MAAM,UACNC,KAAK,QACLd,KAAK,QACLC,MAAOR,EACPsB,SAAUlB,EACVU,UAAWC,KAGb,SAACE,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,MAAM,UACNC,KAAK,WACLd,KAAK,WACLC,MAAON,EACPoB,SAAUlB,EACVU,UAAWC,KAEX,SAACQ,EAAA,EAAD,CACEJ,QAAQ,WACRC,MAAM,UACNI,KAAK,QACLH,KAAK,SAJP,uBCtDR,MARA,WACE,OACE,SAACI,EAAA,EAAD,WACE,SAAC7B,EAAD","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","pages/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"textField\":\"LoginForm_textField__ESZzZ\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport operations from 'redux/auth/auth-operations';\nimport { toast } from 'react-toastify';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport style from './LoginForm.module.css';\n\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email.trim() === '' || password.trim() === '') {\n      return toast.error('Please fill in all fields!');\n    }\n    dispatch(operations.loginUser({ email, password }))\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n<form onSubmit={handleSubmit} className={style.form} autoComplete=\"off\">\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        color=\"primary\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        className={style.textField}\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        color=\"primary\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        className={style.textField}\n      />\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n        >\n          Log in\n        </Button>\n    </form>\n  );\n}\n","import Container from 'components/Container';\nimport LoginForm from 'components/LoginForm';\n\nfunction LoginPage() {\n  return (\n    <Container>\n      <LoginForm />\n    </Container>\n  );\n}\n\nexport default LoginPage;\n\n"],"names":["LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","e","target","name","value","onSubmit","preventDefault","trim","toast","operations","className","style","autoComplete","TextField","label","variant","color","type","onChange","Button","size","Container"],"sourceRoot":""}