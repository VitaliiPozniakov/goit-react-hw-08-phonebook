{"version":3,"file":"static/js/609.6847004e.chunk.js","mappings":"wOAGaA,EAAQC,EAAAA,EAAAA,GAAH,yJAQLC,EAAQD,EAAAA,EAAAA,MAAH,4BAILE,EAAaF,EAAAA,EAAAA,KAAH,0BAIVG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,0BAILK,EAASL,EAAAA,EAAAA,OAAH,+B,gDCiCnB,MAjDA,WAEA,IAAMM,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAEVC,EAASC,EAAAA,GAAW,CACzBC,MAAOD,EAAAA,KAAaE,WAAWD,QAC/BE,SAAUH,EAAAA,KAAaE,WAAWE,IAAI,GAAGC,IAAI,MAQ/C,OACE,iCACE,SAACjB,EAAD,qBACA,SAAC,KAAD,CACEkB,cAAe,CAAEL,MAAO,GAAIE,SAAU,IACtCI,SAVe,SAAC,GAAyB,IAAvBN,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAC7BR,EAASa,EAAAA,EAAAA,UAAqB,CAAEP,MAAAA,EAAOE,SAAAA,KACvCN,EAAS,cASLY,iBAAkBV,EAHpB,SAKG,gBAAIW,EAAJ,EAAIA,aAAJ,OACC,UAAC,KAAD,YACE,UAACpB,EAAD,YACE,SAACC,EAAD,gDACA,SAACC,EAAD,CACEmB,KAAK,QACLC,KAAK,WAEP,SAAC,KAAD,CAAcA,KAAK,QAAQC,UAAU,YAEvC,UAACvB,EAAD,YACE,SAACC,EAAD,4CACA,SAACC,EAAD,CACEmB,KAAK,WACLC,KAAK,cAEP,SAAC,KAAD,CAAcA,KAAK,WAAWC,UAAU,YAE1C,SAACnB,EAAD,CAAQiB,KAAK,SAAb,SAAuBD,EAAe,MAAQ,oBCrC1D,MARA,WACE,OACE,SAACI,EAAA,EAAD,WACE,SAAC,EAAD","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.js","pages/LoginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Title = styled.h2`\n  font-size: 26px;\n  text-transform: uppercase;\n  font-weight: 900;\n  color: var(--main-text-color);\n  margin-bottom: 30px;\n`;\n\nexport const Label = styled.label`\n  \n`;\n\nexport const TitleInput = styled.span`\n\n`;\n\nexport const Input = styled(Field)`\n\n`;\n\nexport const Button = styled.button`\n\n  }\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport { Title, Label, TitleInput, Input, Button } from './LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport operations from 'redux/auth/auth-operations';\nimport * as yup from 'yup';\n\nfunction LoginForm() {\n\nconst dispatch = useDispatch();\n  const navigate = useNavigate();\n\n   const schema = yup.object({\n    email: yup.string().required().email(),\n    password: yup.string().required().min(7).max(14),\n  });\n\n  const onSubmitForm = ({ email, password }) => {\n    dispatch(operations.loginUser({ email, password }));\n    navigate('/contacts');\n  };\n\n  return (\n    <>\n      <Title>Login</Title>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={onSubmitForm}\n        validationSchema={schema}\n      >\n        {({  isSubmitting }) => (\n          <Form >\n            <Label>\n              <TitleInput>Please, enter your e-mail adress</TitleInput>\n              <Input\n                type=\"email\"\n                name=\"email\"\n              />\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </Label>\n            <Label>\n              <TitleInput>Please, enter your password?</TitleInput>\n              <Input\n                type=\"password\"\n                name=\"password\"\n              />\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\">{isSubmitting ? '...' : 'Login'}</Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default LoginForm;\n","import Container from 'components/Container';\nimport LoginForm from 'components/LoginForm';\n\nfunction LoginPage() {\n  return (\n    <Container>\n      <LoginForm />\n    </Container>\n  );\n}\n\nexport default LoginPage;\n\n"],"names":["Title","styled","Label","TitleInput","Input","Field","Button","dispatch","useDispatch","navigate","useNavigate","schema","yup","email","required","password","min","max","initialValues","onSubmit","operations","validationSchema","isSubmitting","type","name","component","Container"],"sourceRoot":""}